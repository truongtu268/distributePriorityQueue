// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	query "github.com/truongtu268/distributePriorityQueue/db/query"
)

// IGetAdRepo is an autogenerated mock type for the IGetAdRepo type
type IGetAdRepo struct {
	mock.Mock
}

// GetAdByID provides a mock function with given fields: ctx, adID
func (_m *IGetAdRepo) GetAdByID(ctx context.Context, adID string) (query.Ad, error) {
	ret := _m.Called(ctx, adID)

	if len(ret) == 0 {
		panic("no return value specified for GetAdByID")
	}

	var r0 query.Ad
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (query.Ad, error)); ok {
		return rf(ctx, adID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) query.Ad); ok {
		r0 = rf(ctx, adID)
	} else {
		r0 = ret.Get(0).(query.Ad)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, adID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIGetAdRepo creates a new instance of IGetAdRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIGetAdRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *IGetAdRepo {
	mock := &IGetAdRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
